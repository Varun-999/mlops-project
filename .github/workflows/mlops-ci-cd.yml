name: MLOps CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-train:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx (better builds + caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to DockerHub (optional - only if you push images)
      # - name: Log in to DockerHub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build services from docker-compose.yml
      - name: Build Docker images
        run: docker compose build

      # 5. Start containers in detached mode
      - name: Start services
        run: docker compose up -d

      # 6. Run training script inside the FastAPI container
      - name: Run training script
        run: docker compose exec -T fastapi-app python train.py

      # 7. Stop containers after job
      - name: Stop and remove containers
        run: docker compose down --volumes



# name: MLOps CI/CD Pipeline

# on:
#   push:
#     branches: [main]
#   pull_request:
#     branches: [main]

# jobs:
#   build-test-train-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Repo
#         uses: actions/checkout@v4

#       - name: Set up Python 3.11
#         uses: actions/setup-python@v4
#         with:
#           python-version: 3.11

#       - name: Install requirements
#         run: pip install -r requirements.txt

#       - name: No Tests Yet
#         run: echo "No tests defined yet."

#       - name: Build Docker images
#         run: docker compose build


#       # (Optional) Login to DockerHub
#       # - name: Login to DockerHub
#       #   uses: docker/login-action@v3
#       #   with:
#       #     username: ${{ secrets.DOCKERHUB_USERNAME }}
#       #     password: ${{ secrets.DOCKERHUB_TOKEN }}

#       # (Optional) Push images to DockerHub
#       # - name: Push Docker Images
#       #   run: docker-compose push

#       # (Optional) Deploy to Server via SSH
#       # - name: Deploy to Server
#       #   uses: appleboy/ssh-action@v1.0.3
#       #   with:
#       #     host: ${{ secrets.SERVER_IP }}
#       #     username: ${{ secrets.SERVER_USER }}
#       #     key: ${{ secrets.SERVER_SSH_KEY }}
#       #     script: |
#       #       cd /path/to/your/project
#       #       git pull
#       #       docker-compose pull
#       #       docker-compose up -d --build
